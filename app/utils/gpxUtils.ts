import { GeneratedRoute } from "../../stores/store";

/**
 * Converts a route to GPX (GPS Exchange Format) XML string
 * @param route - The generated route with coordinates and distance
 * @param routeName - Optional name for the route (defaults to "Generated Route")
 * @returns GPX XML string
 */
export function convertRouteToGPX(
  route: GeneratedRoute,
  routeName: string = "Generated Route"
): string {
  const now = new Date().toISOString();

  // Create waypoints (track points) from coordinates
  const trackPoints = route.coordinates
    .map(([lon, lat]) => {
      return `      <trkpt lat="${lat}" lon="${lon}"></trkpt>`;
    })
    .join("\n");

  const gpxContent = `<?xml version="1.0" encoding="UTF-8"?>
<gpx version="1.1" creator="Route Random" xmlns="http://www.topografix.com/GPX/1/1">
  <metadata>
    <name>${routeName}</name>
    <desc>Random route generated by Route Random app</desc>
    <time>${now}</time>
  </metadata>
  <trk>
    <name>${routeName}</name>
    <desc>Distance: ${(route.distance / 1000).toFixed(2)} km</desc>
    <trkseg>
${trackPoints}
    </trkseg>
  </trk>
</gpx>`;

  return gpxContent;
}

/**
 * Downloads a route as a GPX file
 * @param route - The generated route to download
 * @param filename - Optional filename (defaults to route-{timestamp}.gpx)
 */
export function downloadRouteAsGPX(
  route: GeneratedRoute,
  filename?: string
): void {
  const gpxContent = convertRouteToGPX(route);

  // Create filename with timestamp if not provided
  const finalFilename =
    filename ||
    `route-random-${new Date()
      .toISOString()
      .slice(0, 19)
      .replace(/:/g, "-")}.gpx`;

  // Create blob and download
  const blob = new Blob([gpxContent], { type: "application/gpx+xml" });
  const url = URL.createObjectURL(blob);

  const link = document.createElement("a");
  link.href = url;
  link.download = finalFilename;
  document.body.appendChild(link);
  link.click();

  // Clean up
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}
